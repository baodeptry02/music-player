/* 1. Render songs
2. Scroll top
3. Play / pause / seek
4. CD rotate
5. Next / prev
6. Random
7. Next / Repeat when ended
8. Active song
9. Scroll active song into view
10. Play song when click */
 

const $ = document.querySelector.bind(document)
 const $$ = document.querySelectorAll.bind (document)

 const heading = $('header h2')
 const cdThumb = $('.cd-thumb') /* thumbnail */
 const audio = $('#audio') 
 const playBtn = $('.btn-toggle-play')
 const player = $('.player')
 const progress = $('#progress')
 const nextBtn = $('.btn-next')
 const prevBtn = $('.btn-prev')
 const randomBtn = $('.btn-random')
 const repeatBtn = $('.btn-repeat')
 const playlist = $('.playlist')

 var count =0;
 var arrayTemp = [];

function toast() {
    const main = document.getElementById('message')
    if (main) {
      const toast = document.createElement('div') /* t·∫°o c√°i n√†y v√† c√°i function kh√°c nhau */
      toast.innerHTML = `
      <div class="message">
      <div>
        <img class="message-img" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQuP8QzfMxI-ciD579Kt_esfekrkmhYMN49dQ&usqp=CAU" alt="">
      </div>
      <div>
        
        <div class="message-heading">Having a good time</div>
        <div class="message-title">Listening to music to have lover üòú</div>
      </div>
    </div>`
    main.appendChild(toast)
    }
} 
setTimeout(function() {
  toast()
  }, 1000)

 const app = {
   currentIndex: 0,
   isPlaying: false, /* m·∫∑c ƒë·ªãnh l√† n√≥ false, khi play th√¨ set n√≥ b·∫±ng true */
   isRandom: false,
   isRepeat: false,
   songs:  [
          {
              name: 'How You Like That',
              singer: 'Black Pink',
              path: './assets/music/song1.mp3',
              image: './assets/img/song1.png',
          },
          {
            name: 'As If It‚Äôs Your Last',
              singer: 'BLACKPINK',
              path: './assets/music/song25.mp3',
              image: './assets/img/song25.png',
          },
          {
            name: 'Lovesick Girl',
              singer: 'BLACKPINK',
              path: './assets/music/song23.mp3',
              image: './assets/img/song23.png',
          },
          {
              name: '3107 3',
              singer: 'W/n ft.N√¢u, Duongg, Titie',
              path: './assets/music/song2.mp3',
              image: './assets/img/song2.png',
          },
          {
            name: 'Price Tag',
              singer: 'Jessie J feat. B.o.B',
              path: './assets/music/song22.mp3',
              image: './assets/img/song22.png',
          },
          {
            name: 'Love Story',
              singer: 'Taylor Swift',
              path: './assets/music/song24.mp3',
              image: './assets/img/song24.png',
          },
          {
            name: 'You Belong With Me',
              singer: 'Taylor Swift',
              path: './assets/music/song9.mp3',
              image: './assets/img/song9.png',
          },
          {
            name: 'At My Worst',
              singer: 'Pink Sweat',
              path: './assets/music/song6.mp3',
              image: './assets/img/song6.png',
              },
          {
            name: 'To The Moon',
              singer: 'Hooligan',
              path: './assets/music/song26.mp3',
              image: './assets/img/song26.png',
          },
          {
            name: 'Reality',
              singer: 'Lost Frequencies',
              path: './assets/music/song8.mp3',
              image: './assets/img/song8.png',
          },
          {
            name: 'Girls Like You',
              singer: 'Maroon 5 ft. Cardi B',
              path: './assets/music/song27.mp3',
              image: './assets/img/song27.png',
          },
          {
            name: 'Cheating on You',
            singer: 'Charlie Puth',
            path: './assets/music/song3.mp3',
            image: './assets/img/song3.png',
          },
          {
            name: 'Heat Waves',
              singer: 'Glass Animals - DjKomangRimex',
              path: './assets/music/song4.mp3',
              image: './assets/img/song4.png',
          },
          {
            name: 'comethru',
              singer: 'Jeremy Zucker',
              path: './assets/music/song5.mp3',
              image: './assets/img/song5.png',
          },
/*           {
    name: 'Rather Be Without Me Mashup',
      singer: 'Eminem ft Clean Bandit',
      path: './assets/music/song7.mp3',
      image: './assets/img/song7.png',
          }, */
          {
            name: 'Th·ª©c Gi·∫•c',
              singer: 'Da LAB',
              path: './assets/music/song10.mp3',
              image: './assets/img/song10.png',
          },
          {
            name: 'Sometimes Just Like This',
              singer: 'Chainsmokers & Coldplay',
              path: './assets/music/song11.mp3',
              image: './assets/img/song11.png',
          },
/*           {
            name: 'Believer',
              singer: 'Imagine Dragons',
              path: './assets/music/song12.mp3',
              image: './assets/img/song12.png',
          }, */
          {
            name: 'Memories',
              singer: 'Maroon 5',
              path: './assets/music/song13.mp3',
              image: './assets/img/song13.png',
          },
          {
            name: 'L·ªëi Nh·ªè',
              singer: 'ƒêen V√¢u ft. Ph∆∞∆°ng Anh ƒê√†o',
              path: './assets/music/song15.mp3',
              image: './assets/img/song15.png',
          },
/*           {
            name: 'Ex\'s Hate Me',
              singer: 'BRAY ft AMEE',
              path: './assets/music/song16.mp3',
              image: './assets/img/song16.png',
          }, */
          {
            name: 'Mu·ªôn R·ªìi M√† Sao C√≤n',
              singer: 'S∆°n T√πng MTP',
              path: './assets/music/song17.mp3',
              image: './assets/img/song17.png',
          },
          {
            name: 'Bye Bye Baby Blue',
              singer: 'Glass Animals',
              path: './assets/music/song18.mp3',
              image: './assets/img/song18.png',
          },
          {
            name: 'Chuy·ªán ƒê√¥i Ta',
              singer: 'Da LAB ft. Mu·ªôi',
              path: './assets/music/song19.mp3',
              image: './assets/img/song19.png',
          },
          {
            name: 'T·ª´ Ng√†y Em ƒê·∫øn',
              singer: 'Da LAB',
              path: './assets/music/song20.mp3',
              image: './assets/img/song20.png',
          },
          {
            name: 'Toxic Friends',
              singer: 'BoyWithUke',
              path: './assets/music/song21.mp3',
              image: './assets/img/song21.png',
          },
    ],
    render:function() {
      const htmls = this.songs.map((song, index) => {
        return `
        <div data-index="${index}" class="song ${index === this.currentIndex ? 'active' : ''}">
                <div class="thumb"
                     style="background-image: url('${song. image}')">
                 </div>
                <div class="body">
                     <h3 class="title">${song.name}</h3>
                    <p class="author">${song.singer}</p>
                 </div>
                 <div class="option">
                    <i class="fas fa-ellipsis-h"></i>
                 </div>
            </div>
            `
    })
    /* kh√¥ng l·∫∑p l·∫°i th√¨ g·ªçi th·∫≥ng, c√≤n l·∫∑p l·∫°i th√¨ ƒë·∫∑t bi·∫øn */
    $('.playlist').innerHTML = htmls.join('')  /* render b√†i h√°t v√†o class playlist */
    },


    defineProperties: function() {

      /* search gg xem syntax defineProperty */
      Object.defineProperty(this, 'currentSong', {
        get: function() {
          return this.songs[this.currentIndex]
        }
      })
    },


    /* h√†m s·ª≠ l√Ω s·ª± ki·ªán trong web */
    handleEvents: function() {

      /* m·∫•y th·∫±ng n√†y n·∫±m ·ªü b√™n trong 1 l·ªõp function n·ªØa ( l√† function con c·ªßa handleEvents) n√™n this ·ªü ƒë√¢y l√† app ko tr·ªè t·ªõi ƒë∆∞·ª£c, n·∫øu x√†i this l√† n√≥ tr·ªè t·ªõi c√°i kh√°c */
      const _this = this

      const cd = $('.cd')
      const cdWidth = cd.offsetWidth /* l·∫•y cd width c·ªßa n√≥, k√≠ch th∆∞·ªõc m·∫∑c ƒë·ªãnh */

                /* x·ª≠ l√≠ CD quay v√† d·ª´ng */
                const cdThumbAnimate = cdThumb.animate([
                  { transform: 'rotate(360deg)'}
            ], {
                /* animate c√≤n tham s·ªë 2 */
                  duration: 10000, /* Th·ªùi l∆∞·ª£ng quay 1 v√≤ng ( 10s ) */
                  iterations: Infinity, /* quay bao nhi√™u v√≤ng */
            })
            cdThumbAnimate.pause()

      /* x·ª≠ l√≠ ph√≥ng to / thu nh·ªè CD */
      document.onscroll = function () {

        /* cu·ªôn l√™n th√¨ l√†m c√°i ·∫£nh trong cd thu nh·ªè t·ªõi 1 l√∫c n√†o ƒë√≥ s·∫Ω bi·∫øn m·∫•t ( t·ª´ 200px v·ªÅ 0 )*/
        const scrollTop = window.scrollY || document.documentElement.scrollTop /* documentElement l√† Element c·ªßa th·∫ª HTML */
        const newCdWidth = cdWidth - scrollTop
        
        cd.style.width = newCdWidth > 0 ? newCdWidth + 'px' : 0 
        /* k√©o nhanh qu√° n√≥ s·∫Ω ra gi√° tr·ªã √¢m n√™n c·∫ßn ph·∫£i d√πng to√°n t·ª≠ ƒë·ªÉ check, n·∫øu l·ª° k√©o nhanh qu√° th√†nh √¢m th√¨ n√≥ s·∫Ω m·∫∑c ƒë·ªãnh b·∫±ng 0 */

        cd.style.opacity = newCdWidth / cdWidth
         /* m·ªù d·∫ßn l·∫•y k√≠ch th∆∞·ªõc m·ªõi chia k√≠ch th∆∞·ªõc c≈© */
      },

      // X·ª≠ l√Ω khi click play
      playBtn.onclick = function() {
        if (_this.isPlaying) {
          /* n·∫øu ƒëang play th√¨ ph·∫£i pause v√† ng∆∞·ª£c l·∫°i */
              audio.pause()
        } else {
              audio.play()
        }
      }

      /* khi b√†i h√°t ƒë∆∞·ª£c play */
      audio.onplay = function() {
        /* n·∫øu this bthg th√¨ n√≥ s·∫Ω l√† c·ªßa audio, n√≥ s·∫Ω sai */
        _this.isPlaying = true
        player.classList.add("playing")
        cdThumbAnimate.play()
        /* c√°ch nhanh nh·∫•t l√† console.log ra coi methods c·ªßa n√≥, c≈©ng ph·∫£i check trong __proto__ vi·∫øt t·∫Øt prototype b·ªüi v√¨ n√≥ c≈©ng k·∫ø th·ª´a  */
      }

      /* khi b√†i h√°t b·ªã pause */
      audio.onpause = function() {
        _this.isPlaying = false
        player.classList.remove("playing")
        cdThumbAnimate.pause()
      }

      /* khi ti·∫øn ƒë·ªô b√†i h√°t thay ƒë·ªïi */
      audio.ontimeupdate = function() {
        /* ph·∫£i check th·∫±ng duration v√¨ gi√° tr·ªã ƒë·∫ßu ti√™n c·ªßa n√≥ l√† NaN */
        if (audio.duration) {
          const progressPercent = Math.floor(audio.currentTime / audio.duration * 100)
          progress.value = progressPercent
          progress.style.background = 'linear-gradient(to right, #ec1f55 0%, #ec1f55 ' + progressPercent + '%, #d3d3d3 ' + progressPercent + '%, #d3d3d3 100%)' /* l√†m thanh th·ªùi gian k√©o d√†i t·ª´ ƒë·∫ßu t·ªõi cu·ªëi */
        }
      }

      /* x·ª≠ l√≠ khi tua b√†i h√°t */
      /* ƒë·ªïi onchange th√†nh oninput s·∫Ω kh√¥ng b·ªã gi·ª±t */
      progress.oninput = function(e) {
        /* e.target.value l√† % ta l·∫•y ƒë∆∞·ª£c khi tua t·ªõi ch·ªó n√†o ƒë√≥ */
        /* audio.duration l√† t·ªïng th·ªùi gian b√†i h√°t ƒë√≥ ch·∫°y */
        const seekTime = e.target.value * audio.duration / 100
        audio.currentTime = seekTime
      }

      /* khi b·∫•m n√∫t next b√†i h√°t c√≥ b·∫≠t n√∫t random */
      nextBtn.onclick  = function(e) {

        if (_this.isRandom) {
          /* n·∫øu */
          _this.playRandomSong()
        } else {
          _this.nextSong()
        }

        audio.play() /* n√≥ c√≥ 1 c√°i bug l√† khi b√†i h√°t ƒëang play m√† b·∫•m next n√≥ s·∫Ω kh√¥ng play n·ªØa n√™n ph·∫£i th√™m c√°i n√†y v√†o ƒë√¢y */
        _this.scrollToActiveSong()
      }

      /* khi prev b√†i h√°t */
      prevBtn.onclick = function(e) {

        if (_this.isRandom) {
          _this.playRandomSong()
        } else {
          _this.prevSong()
        }

        audio.play()
        _this.scrollToActiveSong()
      }

      /* khi b·∫•m v√†o n√∫t random */
      randomBtn.onclick = function(e) {

          _this.isRandom = !_this.isRandom
        this.classList.toggle('active', _this.isRandom) /* ko d√πng e.target v√¨ b·∫•m tr√∫ng icon n√≥ s·∫Ω b·ªã l·ªói */
        /* ƒë·ªçc kƒ© API c·ªßa toggle, truy·ªÅn ƒë·ªëi s·ªë th·ª© 2 l√† Boolean, Boolean true th√¨ add, false th√¨ remove */

      }

      // X·ª≠ l√Ω khi ·∫•n n√∫t repeat
      repeatBtn.onclick = function(e) {
 
        _this.isRepeat = !_this.isRepeat  /* ƒë·∫£o l·∫°i th√†nh true */
          this.classList.toggle('active', _this.isRepeat)

          /* thu·ªôc t√≠nh c√≥ s·∫µn c·ªßa HTML Audio */
          if(_this.isRepeat){
            audio.loop=true;
        }else{
            audio.loop=false;
        }
        }

      // X·ª≠ l√Ω khi h·∫øt b√†i h√°t c√≥ b·∫≠t n√∫t repeat
      audio.onended = function () {

        /* n·∫øu c√≥ b·∫≠t n√∫t repeat th√¨ h√°t l·∫°i v√¨ ƒë√£ ƒë·∫£o th√†nh boolean true   */
        if (app.isRepeat) {
          audio.play()
        } else {
          nextBtn.click()
        }
        _this.scrollToActiveSong()
    }
      
      /* x·ª≠ l√≠ b√†i h√°t khi ch·∫°y h·∫øt c√≥ b·∫≠t random */
      audio.onended = function() {
        if (_this.isRandom) {
          _this.playRandomSong()
        } else {
          _this.nextSong()
        }
        _this.scrollToActiveSong()
        audio.play()
        /* thay t·ª´ if t·ªõi audio.play() thay b·∫±ng nextBtn.click(), n√†y l√† m√°y t·ª± b·∫•m next khi h·∫øt b√†i  */
      }

      /* L·∫Øng nghe h√†nh vi khi click v√†o playlist */
        playlist.onclick = function (e) {

          /* e l√† c√°i event ch√∫ng ta nh·∫≠n ƒë∆∞·ª£c ·ªü ƒë√¢y, target l√† ƒë√≠ch m√† ch√∫ng ta click v√†o */
          let songNode = e.target.closest('.song:not(.active)'); /* b·∫Øt s·ª± ki·ªán click n√†o th·∫±ng song n√†o m√† kh√¥ng c√≥ active */
          /* closet tr·∫£ v·ªÅ cho m√¨nh c√°i element 1 l√† ch√≠nh n√≥ 2 l√† c√°i th·∫ª cha c·ªßa n√≥, n·∫øu kh√¥ng t√¨m th·∫•y element th√¨ n√≥ s·∫Ω tr·∫£ v·ªÅ null */

          /* b·∫•m v√†o b·∫•t k√¨ ƒë√¢u c·ªßa song tr·ª´ n√∫t 3 ch·∫•m */
          if (!e.target.closest('.option')) {
            if (songNode) {
              _this.currentIndex = Number(songNode.dataset.index); /* current index khi n√£y l√† s·ªë, nh∆∞ng khi get ra t·ª´ c√°i element nh∆∞ n√†y, th√¨ n√≥ l√† chu·ªói */
              _this.loadCurrentSong();
              audio.play();
            }
          }

          /* tr∆∞·ªùng h·ª£p b·∫•m v√†o n√∫t 3 ch·∫•m */
          if (e.target.closest('.option')){
            alert('Ch∆∞a c√≥ code xong, b·∫•m lung tung kh√¥ng =))')
          }
        }
    },

      /* Scroll to view */ 
      scrollToActiveSong: function() {
        setTimeout(() => {
          if (this.currentIndex <= 3) {
            $('.song.active').scrollIntoView({
              behavior: 'smooth',
              block: 'end',
            });
          } else {
            $('.song.active').scrollIntoView({
              behavior: 'smooth',
              block: 'center',
            });
          }
        }, 300);
    },


    loadCurrentSong: function() { 
      heading.textContent = this.currentSong.name
      cdThumb.style.backgroundImage = `url('${this.currentSong.image}')`
      audio.src = this.currentSong.path

      /* th√™m n√†y ƒë·ªÉ kh·ªèi render l·∫°i, n·∫øu nhi·ªÅu b√†i h√°t qu√° khi render l·∫°i s·∫Ω b·ªã gi·∫≠t */
      if ($('.song.active')) {
        $('.song.active').classList.remove('active');
      }
      const list = $$('.song');
      list.forEach((song) => {
        if (song.getAttribute('data-index') == this.currentIndex) {
          song.classList.add('active');
        }
      });
    },

    nextSong: function() {
      this.currentIndex++

      if (this.currentIndex >= this.songs.length) {
        this.currentIndex = 0
      }

      this.loadCurrentSong()
    },

    prevSong: function() {
      this.currentIndex--

      if (this.currentIndex < 0) {
         this.currentIndex = this.songs.length - 1 /* set v·ªÅ b√†i h√°t cu·ªëi ( ph·∫£i c√≥ tr·ª´ 1 ƒë·ªÉ quay v·ªÅ th√†nh ph·∫ßn cu·ªëi m·∫£ng) */
      }

      this.loadCurrentSong()
    },

    playRandomSong: function() {
      let newIndex 
      newIndex = Math.floor(Math.random() * this.songs.length)
      if(count >0) { 
        do {
          newIndex = Math.floor(Math.random() * this.songs.length)
          var isCheck= arrayTemp.includes(newIndex);
      } while (isCheck == true) {
        arrayTemp[count]=newIndex;
                this.currentIndex = newIndex;
                this.loadCurrentSong();
                if(count == this.songs.length-1)
                {
                    arrayTemp=[];
                    count=-1;
                }
                count++;
      } 
      /* l·∫∑p ng·∫´u nhi√™n, n·∫øu l·∫∑p d√≠nh c√°i c≈© th√¨ l·∫∑p ti·∫øp v√† random h·∫øt 1 m·∫£ng, s·∫Ω random l·∫°i m·∫£ng m·ªõi, tr√°nh b·ªã c·ª© c√°ch 2-3 b√†i l·∫°i quay v·ªÅ b√†i c≈© */
      }
     

      this.currentIndex = newIndex /* ph·∫£i set l·∫°i */
      this.loadCurrentSong()
    },

    /*t·∫°o ra function n√†o thi ph·∫£i g·ªçi function ƒë√≥ */
    start: function() {

      /* ƒë·ªãnh nghƒ©a c√°c thu·ªôc t√≠nh cho Object */
      this.defineProperties()

      /* l·∫Øng nghe v√† x·ª≠ l√Ω c√°c s·ª± ki·ªán */
      this.handleEvents()

      /* t·∫£i th√¥ng tin b√†i h√°t ƒë·∫ßu ti√™n v√†o UI ( user interface ) khi ch·∫°y ·ª©ng d·ª•ng*/
      this.loadCurrentSong()

      /* render l·∫°i playlist */
        this.render()
    }

 }

 app.start()
